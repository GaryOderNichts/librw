; $MODE = "UniformRegister"

; $NUM_SPI_PS_INPUT_CNTL = 4
; color R0
; $SPI_PS_INPUT_CNTL[0].SEMANTIC = 0
; $SPI_PS_INPUT_CNTL[0].DEFAULT_VAL = 1
; tex R1
; $SPI_PS_INPUT_CNTL[1].SEMANTIC = 1
; $SPI_PS_INPUT_CNTL[1].DEFAULT_VAL = 1
; tex2 R2
; $SPI_PS_INPUT_CNTL[2].SEMANTIC = 2
; $SPI_PS_INPUT_CNTL[2].DEFAULT_VAL = 1
; fog R3
; $SPI_PS_INPUT_CNTL[3].SEMANTIC = 3
; $SPI_PS_INPUT_CNTL[3].DEFAULT_VAL = 1

; C0
; $UNIFORM_VARS[0].name = "u_fogColor"
; $UNIFORM_VARS[0].type = "vec4"
; $UNIFORM_VARS[0].count = 1
; $UNIFORM_VARS[0].block = -1
; $UNIFORM_VARS[0].offset = 0
; C1
; $UNIFORM_VARS[1].name = "u_fxparams"
; $UNIFORM_VARS[1].type = "vec2"
; $UNIFORM_VARS[1].count = 1
; $UNIFORM_VARS[1].block = -1
; $UNIFORM_VARS[1].offset = 4
; C2
; $UNIFORM_VARS[2].name = "u_colorClamp"
; $UNIFORM_VARS[2].type = "vec4"
; $UNIFORM_VARS[2].count = 1
; $UNIFORM_VARS[2].block = -1
; $UNIFORM_VARS[2].offset = 8

; $SAMPLER_VARS[0].name = "tex0"
; $SAMPLER_VARS[0].type = "SAMPLER2D"
; $SAMPLER_VARS[0].location = 0
; $SAMPLER_VARS[1].name = "tex1"
; $SAMPLER_VARS[1].type = "SAMPLER2D"
; $SAMPLER_VARS[1].location = 1

00 ALU: ADDR(32) CNT(7)
    0  x: MAX    R4.x, R0.x,  C2.x
       y: MAX    R4.y, R0.y,  C2.y
       z: MAX    R4.z, R0.z,  C2.z
       w: MAX    R4.w, R0.w,  C2.w
    1  x: ADD    R1.y, -R1.y, 1.0f
       y: ADD    R2.y, -R2.y, 1.0f
01 TEX: ADDR(80) CNT(2) VALID_PIX
    2  SAMPLE    R1, R1.xy0x, t0, s0
    3  SAMPLE    R2, R2.xy0x, t1, s1
02 ALU: ADDR(39) CNT(28)
    4  x: MUL    R0.x, R0.x,  R1.x
       y: MUL    R0.y, R0.y,  R1.y
       z: MUL    R0.z, R0.z,  R1.z
       w: MUL    R0.w, R0.w,  R1.w
    5  x: MUL    R4.x, R4.x,  C1.x
       y: MUL    R4.y, R4.y,  C1.x
       z: MUL    R4.z, R4.z,  C1.x
       w: MUL    R4.w, R4.w,  C1.x
    6  x: MUL    R4.x, R4.x,  R2.x
       y: MUL    R4.y, R4.y,  R2.y
       z: MUL    R4.z, R4.z,  R2.z
       w: MUL    R4.w, R4.w,  R2.w
    7  x: ADD    ____, R0.x,  -C0.x
       y: ADD    ____, R0.y,  -C0.y
       z: ADD    ____, R0.z,  -C0.z
    8  x: MULADD R0.x, PV0.x, R3.x, C0.x
       y: MULADD R0.y, PV0.y, R3.x, C0.y
       z: MULADD R0.z, PV0.z, R3.x, C0.z
    9  x: MUL    R4.x, R4.x,  R3.x
       y: MUL    R4.y, R4.y,  R3.x
       z: MUL    R4.z, R4.z,  R3.x
    10 x: MAX    R5.x, R0.w,  C1.y
    11 x: MUL    ____, R4.x,  R5.x
       y: MUL    ____, R4.y,  R5.x
       z: MUL    ____, R4.z,  R5.x
    12 x: MULADD R0.x, R0.x,  R0.w, PV0.x
       y: MULADD R0.y, R0.y,  R0.w, PV0.y
       z: MULADD R0.z, R0.z,  R0.w, PV0.z
03 EXP_DONE: PIX0, R0
END_OF_PROGRAM
